version: '3'

services:
    #Nginx Service
    nginx:
        image: nginx:stable
        container_name: webserver
        depends_on:
            - php
            - mysql
        ports:
            - "${HTTP_PORT}:80"
        volumes:
            - "${APP_PATH}:/var/www/api:ro"
            - ./nginx/conf.d:/etc/nginx/conf.d:ro
        restart: always
        networks:
            - backend-network

    # #PHP Service
    php:
        build: ./images/fpm
        container_name: php-fpm
        depends_on:
            - mysql
        ports:
            - "9000:9000"
        volumes:
            - "${APP_PATH}:/var/www/api:ro"
            - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
        restart: always
        networks:
            - backend-network


    # #Queue Service
    php-queue:
        depends_on:
            - mysql
        build: ./images/php-cli
        volumes:
            - "${APP_PATH}:/var/www/api:ro"
        command: php artisan queue:work --verbose --tries=3 --timeout=90
        networks:
            - backend-network


    #MySQL Service
    mysql:
        image: mysql
        container_name: mysql-db
        env_file: ./mysql/.env
        tty: true
        volumes:
            - mysql-data:/var/lib/mysql
            - ./mysql/conf.d:/etc/mysql/conf.d
        ports:
            - "3307:3306"
        command: --default-authentication-plugin=mysql_native_password
        environment:
            MYSQL_ROOT_PASSWORD: '${MYSQL_PASSWORD}'
            MYSQL_DATABASE: '${MYSQL_DATABASE}'
            MYSQL_USER: '${MYSQL_USERNAME}'
            MYSQL_PASSWORD: '${MYSQL_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        restart: unless-stopped
        networks:
            - backend-network

volumes:
    mysql-data:
      driver: local

networks:
    backend-network:
        driver: bridge
